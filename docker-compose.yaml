services:
  kafka:
    image: apache/kafka:4.0.0
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://kafka:9092,PLAINTEXT://kafka:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    ports:
      - "9092:9092"
    networks:
      - "quarkus-policy-exercise"

  mongodb:
    image: mongo:7
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: redfox
      MONGO_INITDB_ROOT_PASSWORD: test
    volumes:
      - mongodb-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - "quarkus-policy-exercise"

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: redfox
      POSTGRES_PASSWORD: test
      POSTGRES_DB: espolicies
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - "quarkus-policy-exercise"

  policy-service:
    image: policy-service:1-jvm
    container_name: policy-service
    build:
      context: policy-service
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - kafka
      - postgres
    ports:
      - "8080:8080"
    networks:
      - "quarkus-policy-exercise"

  product-service:
    image: product-service:1-jvm
    container_name: product-service
    build:
      context: product-service
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8081"
    networks:
      - "quarkus-policy-exercise"

  configuration-service:
    image: configuration-service:1-jvm
    container_name: configuration-service
    build:
      context: configuration-service
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - mongodb
    ports:
      - "8082:8082"
    networks:
      - "quarkus-policy-exercise"

volumes:
  postgres-volume:
  mongodb-volume:

networks:
  quarkus-policy-exercise:
    driver: bridge